{"ast":null,"code":"import _regeneratorRuntime from \"/home/mark/React Jobly/react jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/mark/React Jobly/react jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/mark/React Jobly/react jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/mark/React Jobly/react jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mark/React Jobly/react jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mark/React Jobly/react jobly/frontend/src/Profiles/ProfileForm.js\";\nimport React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api\";\nimport UserContext from \"../UserContext\"; // eslint-disable-next-line\n\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  var _useContext = useContext(UserContext),\n      currentUser = _useContext.currentUser,\n      setCurrentUser = _useContext.setCurrentUser;\n\n  var _useState = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formErrors = _useState4[0],\n      setFormErrors = _useState4[1]; // switch to use our fancy limited-time-display message hook\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      saveConfirmed = _useState6[0],\n      setSaveConfirmed = _useState6[1]; // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n\n  console.debug(\"ProfileForm\", \"currentUser=\", currentUser, \"formData=\", formData, \"formErrors=\", formErrors, \"saveConfirmed=\", saveConfirmed);\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n  /** Handle form data changing */\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      var profileData, username, updatedUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              profileData = {\n                firstName: formData.firstName,\n                lastName: formData.lastName,\n                email: formData.email,\n                password: formData.password\n              };\n              username = formData.username;\n              _context.prev = 3;\n              _context.next = 6;\n              return JoblyApi.saveProfile(username, profileData);\n\n            case 6:\n              updatedUser = _context.sent;\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              debugger;\n              setFormErrors(_context.t0);\n              return _context.abrupt(\"return\");\n\n            case 14:\n              setFormData(function (f) {\n                return _objectSpread(_objectSpread({}, f), {}, {\n                  password: \"\"\n                });\n              });\n              setFormErrors([]);\n              setSaveConfirmed(true); // trigger reloading of user information throughout the site\n\n              setCurrentUser(updatedUser);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 9]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function handleChange(evt) {\n    var _evt$target = evt.target,\n        name = _evt$target.name,\n        value = _evt$target.value;\n    setFormData(function (f) {\n      return _objectSpread(_objectSpread({}, f), {}, _defineProperty({}, name, value));\n    });\n    setFormErrors([]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 col-lg-4 offset-md-3 offset-lg-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"form-control-plaintext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, formData.username)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"firstName\",\n    className: \"form-control\",\n    value: formData.firstName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lastName\",\n    className: \"form-control\",\n    value: formData.lastName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    className: \"form-control\",\n    value: formData.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"Confirm password to make changes:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    value: formData.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  })), formErrors.length ? /*#__PURE__*/React.createElement(Alert, {\n    type: \"danger\",\n    messages: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }) : null, saveConfirmed ? /*#__PURE__*/React.createElement(Alert, {\n    type: \"success\",\n    messages: [\"Updated successfully.\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary btn-block mt-4\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Save Changes\")))));\n}\n\nexport default ProfileForm;","map":{"version":3,"sources":["/home/mark/React Jobly/react jobly/frontend/src/Profiles/ProfileForm.js"],"names":["React","useState","useContext","Alert","JoblyApi","UserContext","useTimedMessage","ProfileForm","currentUser","setCurrentUser","firstName","lastName","email","username","password","formData","setFormData","formErrors","setFormErrors","saveConfirmed","setSaveConfirmed","console","debug","handleSubmit","evt","preventDefault","profileData","saveProfile","updatedUser","f","handleChange","target","name","value","length"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api\";\nimport UserContext from \"../UserContext\";\n\n// eslint-disable-next-line\nimport useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n      \"ProfileForm\",\n      \"currentUser=\", currentUser,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n      \"saveConfirmed=\", saveConfirmed,\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div className=\"col-md-6 col-lg-4 offset-md-3 offset-lg-4\">\n        <h3>Profile</h3>\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Username</label>\n                <p className=\"form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                    name=\"email\"\n                    className=\"form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n\n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n\n              <button\n                  className=\"btn btn-primary btn-block mt-4\"\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}