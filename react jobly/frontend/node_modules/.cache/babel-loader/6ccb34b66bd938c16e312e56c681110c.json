{"ast":null,"code":"import _regeneratorRuntime from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mark/React Jobly/react-jobly/frontend/src/auth/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport JoblyImg from \"../Jobly.png\";\nimport \".LoginForm.css\";\n\nfunction LoginForm(_ref) {\n  var login = _ref.login;\n  var history = useHistory();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setFormData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formErrors = _useState4[0],\n      setFormErrors = _useState4[1];\n\n  console.debug(\"LoginForm\", \"login=\", typeof login, \"formData=\", formData, \"formErrors\", formErrors);\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n  /** Update form data field */\n\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              evt.preventDefault();\n              _context.next = 3;\n              return login(formData);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.success) {\n                history.push(\"/companies\");\n              } else {\n                setFormErrors(result.errors);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function handleChange(evt) {\n    var _evt$target = evt.target,\n        name = _evt$target.name,\n        value = _evt$target.value;\n    setFormData(function (l) {\n      return _objectSpread(_objectSpread({}, l), {}, _defineProperty({}, name, value));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"LoginForm\",\n    style: {\n      backgroundImage: \"url(\".concat(JoblyImg, \")\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    className: \"form-control\",\n    value: formData.username,\n    onChange: handleChange,\n    autoComplete: \"username\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    value: formData.password,\n    onChange: handleChange,\n    autoComplete: \"current-password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }), formErrors.length ? /*#__PURE__*/React.createElement(Alert, {\n    type: \"danger\",\n    messages: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary float-right\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }, \"Submit\")));\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/mark/React Jobly/react-jobly/frontend/src/auth/LoginForm.js"],"names":["React","useState","useHistory","Alert","JoblyImg","LoginForm","login","history","username","password","formData","setFormData","formErrors","setFormErrors","console","debug","handleSubmit","evt","preventDefault","result","success","push","errors","handleChange","target","name","value","l","backgroundImage","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\nimport JoblyImg from \"../Jobly.png\";\nimport \".LoginForm.css\";\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"LoginForm\",\n      \"login=\", typeof login,\n      \"formData=\", formData,\n      \"formErrors\", formErrors,\n  );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await login(formData);\n    if (result.success) {\n      history.push(\"/companies\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\" style={{ backgroundImage: `url(${JoblyImg})` }}>\n         <h3 className=\"mb-3\">Log In</h3>\n          <form onSubmit={handleSubmit}>\n            <label>Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                      autoComplete=\"username\"\n                      required/>\n                 <br></br>  \n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required/>\n                   {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n               <button\n                    className=\"btn btn-primary float-right\"\n                    onSubmit={handleSubmit}>\n                  Submit\n                </button>\n              </form>\n        </div>\n  );\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}