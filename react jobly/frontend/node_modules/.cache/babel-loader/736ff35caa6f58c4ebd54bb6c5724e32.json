{"ast":null,"code":"import _regeneratorRuntime from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nvar BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nvar JoblyApi = /*#__PURE__*/function () {\n  function JoblyApi() {\n    _classCallCheck(this, JoblyApi);\n  }\n\n  _createClass(JoblyApi, null, [{\n    key: \"request\",\n    value: // the token for interactive with the API will be stored here.\n    function () {\n      var _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint) {\n        var data,\n            method,\n            url,\n            headers,\n            params,\n            message,\n            _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n                method = _args.length > 2 && _args[2] !== undefined ? _args[2] : \"get\";\n                console.debug(\"API Call:\", endpoint, data, method); //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n                //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n\n                url = \"\".concat(BASE_URL, \"/\").concat(endpoint);\n                headers = {\n                  Authorization: \"Bearer \".concat(JoblyApi.token)\n                };\n                params = method === \"get\" ? data : {};\n                _context.prev = 6;\n                _context.next = 9;\n                return axios({\n                  url: url,\n                  method: method,\n                  data: data,\n                  params: params,\n                  headers: headers\n                });\n\n              case 9:\n                return _context.abrupt(\"return\", _context.sent.data);\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](6);\n                console.error(\"API Error:\", _context.t0.response);\n                message = _context.t0.response.data.error.message;\n                throw Array.isArray(message) ? message : [message];\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[6, 12]]);\n      }));\n\n      function request(_x) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }() // Individual API routes\n\n    /** Get details on a company by handle. */\n\n  }, {\n    key: \"getCompany\",\n    value: function () {\n      var _getCompany = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(handle) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.request(\"companies/\".concat(handle));\n\n              case 2:\n                res = _context2.sent;\n                return _context2.abrupt(\"return\", res.company);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getCompany(_x2) {\n        return _getCompany.apply(this, arguments);\n      }\n\n      return getCompany;\n    }()\n    /** Get current user. */\n\n  }, {\n    key: \"getCurrentUser\",\n    value: function () {\n      var _getCurrentUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.request(\"users/\".concat(username));\n\n              case 2:\n                res = _context3.sent;\n                return _context3.abrupt(\"return\", res.user);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getCurrentUser(_x3) {\n        return _getCurrentUser.apply(this, arguments);\n      }\n\n      return getCurrentUser;\n    }()\n    /** Get company by handle. */\n\n  }, {\n    key: \"getCompanies\",\n    value: function () {\n      var _getCompanies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(handle) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.request(\"companies/\".concat(handle));\n\n              case 2:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res.company);\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getCompanies(_x4) {\n        return _getCompanies.apply(this, arguments);\n      }\n\n      return getCompanies;\n    }()\n    /** Get jobs  by title  */\n\n  }, {\n    key: \"getJobs\",\n    value: function () {\n      var _getJobs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(title) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.request(\"jobs\", {\n                  title: title\n                });\n\n              case 2:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res.jobs);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getJobs(_x5) {\n        return _getJobs.apply(this, arguments);\n      }\n\n      return getJobs;\n    }()\n    /** Apply to job */\n\n  }, {\n    key: \"applyToJob\",\n    value: function () {\n      var _applyToJob = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(username, id) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.request(\"users/\".concat(username, \"/jobs/\").concat(id), {}, \"post\");\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function applyToJob(_x6, _x7) {\n        return _applyToJob.apply(this, arguments);\n      }\n\n      return applyToJob;\n    }()\n    /** Get login from username and password. */\n\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.request(\"auth/token\", data, \"post\");\n\n              case 2:\n                res = _context7.sent;\n                return _context7.abrupt(\"return\", res.token);\n\n              case 4:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function login(_x8) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n    /** Signup */\n\n  }, {\n    key: \"signup\",\n    value: function () {\n      var _signup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.request(\"auth/register\", data, \"post\");\n\n              case 2:\n                res = _context8.sent;\n                return _context8.abrupt(\"return\", res.token);\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function signup(_x9) {\n        return _signup.apply(this, arguments);\n      }\n\n      return signup;\n    }()\n    /** Save profile  */\n\n  }, {\n    key: \"saveProfile\",\n    value: function () {\n      var _saveProfile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(username, data) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.request(\"users/\".concat(username), data, \"patch\");\n\n              case 2:\n                res = _context9.sent;\n                return _context9.abrupt(\"return\", res.user);\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function saveProfile(_x10, _x11) {\n        return _saveProfile.apply(this, arguments);\n      }\n\n      return saveProfile;\n    }()\n  }]);\n\n  return JoblyApi;\n}();\n\nexport default JoblyApi;","map":{"version":3,"sources":["/home/mark/React Jobly/react-jobly/frontend/src/api.js"],"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","error","response","message","Array","isArray","handle","request","res","company","username","user","title","jobs","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get company by handle. */\n\n  static async getCompanies(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /** Get jobs  by title  */\n\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  /** Apply to job */\n\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /** Get login from username and password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save profile  */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n \n}\n\n\n\n\nexport default JoblyApi;    "]},"metadata":{},"sourceType":"module"}