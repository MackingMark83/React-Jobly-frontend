{"ast":null,"code":"import _regeneratorRuntime from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/mark/React Jobly/react-jobly/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mark/React Jobly/react-jobly/frontend/src/Jobs/JobCard.js\";\nimport React, { useContext, useState } from \"react\";\nimport \"./JobCard.css\";\nimport UserContext from \"../UserContext\";\n\nfunction JobCard(_ref) {\n  var id = _ref.id,\n      title = _ref.title,\n      salary = _ref.salary,\n      equity = _ref.equity,\n      companyName = _ref.companyName;\n  console.debug(\"JobCard\");\n\n  var _useContext = useContext(UserContext),\n      hasAppliedToJob = _useContext.hasAppliedToJob,\n      applyToJob = _useContext.applyToJob;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      applied = _useState2[0],\n      setApplied = _useState2[1];\n\n  React.useEffect(function updateAppliedStatus() {\n    console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n  /** Apply for a job */\n\n  function handleApply(_x) {\n    return _handleApply.apply(this, arguments);\n  }\n\n  function _handleApply() {\n    _handleApply = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(evt) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!hasAppliedToJob(id)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              applyToJob(id);\n              setApplied(true);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleApply.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"JobCard card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \" \", applied, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, companyName), salary && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }\n  }, \"Salary: \", formatSalary(salary))), equity !== undefined && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 36\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 41\n    }\n  }, \"Equity: \", equity)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger font-weight-bold text-uppercase float-right\",\n    onClick: handleApply,\n    disabled: applied,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, applied ? \"Applied\" : \"Apply\")));\n}\n/** Render integer salary like '$1,250,343' */\n\n\nfunction formatSalary(salary) {\n  var digitsRev = [];\n  var salaryStr = salary.toString();\n\n  for (var i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(\",\");\n  }\n\n  return digitsRev.reverse().join(\"\");\n}\n\nexport default JobCard;","map":{"version":3,"sources":["/home/mark/React Jobly/react-jobly/frontend/src/Jobs/JobCard.js"],"names":["React","useContext","useState","UserContext","JobCard","id","title","salary","equity","companyName","console","debug","hasAppliedToJob","applyToJob","applied","setApplied","useEffect","updateAppliedStatus","handleApply","evt","formatSalary","undefined","digitsRev","salaryStr","toString","i","length","push","reverse","join"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./JobCard.css\";\nimport UserContext from \"../UserContext\";\n\n\nfunction JobCard({ id, title, salary, equity, companyName }) {\n  console.debug(\"JobCard\");\n\n  const { hasAppliedToJob, applyToJob } = useContext(UserContext);\n  const [applied, setApplied] = useState();\n\n  React.useEffect(function updateAppliedStatus() {\n    console.debug(\"JobCard useEffect updateAppliedStatus\", \"id=\", id);\n\n    setApplied(hasAppliedToJob(id));\n  }, [id, hasAppliedToJob]);\n\n  /** Apply for a job */\n  async function handleApply(evt) {\n    if (hasAppliedToJob(id)) return;\n    applyToJob(id);\n    setApplied(true);\n  }\n\n  return (\n      <div className=\"JobCard card\"> {applied}\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{title}</h6>\n          <p>{companyName}</p>\n          {salary && <div><small>Salary: {formatSalary(salary)}</small></div>}\n          {equity !== undefined && <div><small>Equity: {equity}</small></div>}\n          <button\n              className=\"btn btn-danger font-weight-bold text-uppercase float-right\"\n              onClick={handleApply}\n              disabled={applied}\n          >\n            {applied ? \"Applied\" : \"Apply\"}\n          </button>\n        </div>\n      </div>\n  );\n}\n\n/** Render integer salary like '$1,250,343' */\n\nfunction formatSalary(salary) {\n  const digitsRev = [];\n  const salaryStr = salary.toString();\n\n  for (let i = salaryStr.length - 1; i >= 0; i--) {\n    digitsRev.push(salaryStr[i]);\n    if (i > 0 && i % 3 === 0) digitsRev.push(\",\");\n  }\n\n  return digitsRev.reverse().join(\"\");\n}\n\n\nexport default JobCard;\n"]},"metadata":{},"sourceType":"module"}